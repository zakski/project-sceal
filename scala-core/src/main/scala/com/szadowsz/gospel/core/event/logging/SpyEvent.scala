/*
 * tuProlog - Copyright (C) 2001-2002  aliCE team at deis.unibo.it
 *
 * This library is free software you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
package com.szadowsz.gospel.core.event.logging

import java.util.EventObject

import com.szadowsz.gospel.core.engine.Engine

/**
 *  This class defines an internal event
 *  generated by the prolog core
 *
 */
@SerialVersionUID(1L)
class SpyEvent(source: Object, env: Engine, msg: String) extends EventObject(source) {

  /**
   * event description
   */
  private val _msg = msg

  /**
   * @uml.property  name="env"
   * @uml.associationEnd
   */
  private val _env = env

  def this(source: Object, msg: String) = this(source, null, msg)

  def getMsg() = _msg

  def getSnapshot() = env

  override def toString() = msg + (if (env == null) "" else env.toString())
}